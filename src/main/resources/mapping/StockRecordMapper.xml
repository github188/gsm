<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zxl.mapper.StockRecordMapper">
  <resultMap id="BaseResultMap" type="org.zxl.model.StockRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="oper_type" jdbcType="VARCHAR" property="operType" />
    <result column="cus_id" jdbcType="VARCHAR" property="cusId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="save_addr" jdbcType="VARCHAR" property="saveAddr" />
    <result column="principle_id" jdbcType="VARCHAR" property="principleId" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="quantity" jdbcType="VARCHAR" property="quantity" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_id, create_date, oper_type, cus_id, type, save_addr, principle_id, operator_id, 
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_records
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getStockRecordList" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT a.create_date,a.cus_id,a.quantity,a.remark,a.save_addr,a.a_create_id as create_id,
a.a_princile_id as princile_id,a.a_operator_id as operator_id,a.a_type as type,a.a_unit as unit,a.a_oper_type as oper_type
FROM
	(SELECT * FROM t_stock_records a
		LEFT JOIN (SELECT a.`name` as a_create_id,a.id as b_create_id FROM t_user a) b ON b.b_create_id=a.create_id
		LEFT JOIN (SELECT a.`name` as a_princile_id,a.id as b_principle_id from t_user a) c ON c.b_principle_id=a.principle_id
		LEFT JOIN (SELECT a.`name` as a_operator_id,a.id as b_operator_id from t_user a) d ON d.b_operator_id=a.operator_id
		LEFT JOIN (SELECT a.`name` as a_type,a.unit as a_unit,a.id as b_type from t_stock a) e ON e.b_type=a.type
		LEFT JOIN (SELECT a.`name` as a_oper_type,a.`value` as b_oper_type from sys_dic a) f ON f.b_oper_type=a.oper_type) a
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_stock_records
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.zxl.model.StockRecord">
    insert into t_stock_records (id, create_id, create_date, 
      oper_type, cus_id, type, 
      save_addr, principle_id, operator_id, 
      remark)
    values (#{id,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{operType,jdbcType=VARCHAR}, #{cusId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{saveAddr,jdbcType=VARCHAR}, #{principleId,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.zxl.model.StockRecord">
    insert into t_stock_records
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="operType != null">
        oper_type,
      </if>
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="saveAddr != null">
        save_addr,
      </if>
      <if test="principleId != null">
        principle_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operType != null">
        #{operType,jdbcType=VARCHAR},
      </if>
      <if test="cusId != null">
        #{cusId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="saveAddr != null">
        #{saveAddr,jdbcType=VARCHAR},
      </if>
      <if test="principleId != null">
        #{principleId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zxl.model.StockRecord">
    update t_stock_records
    <set>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operType != null">
        oper_type = #{operType,jdbcType=VARCHAR},
      </if>
      <if test="cusId != null">
        cus_id = #{cusId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="saveAddr != null">
        save_addr = #{saveAddr,jdbcType=VARCHAR},
      </if>
      <if test="principleId != null">
        principle_id = #{principleId,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zxl.model.StockRecord">
    update t_stock_records
    set create_id = #{createId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      oper_type = #{operType,jdbcType=VARCHAR},
      cus_id = #{cusId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      save_addr = #{saveAddr,jdbcType=VARCHAR},
      principle_id = #{principleId,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>